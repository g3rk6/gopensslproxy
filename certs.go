package gopensslproxy

import (
	"crypto/tls"
	"crypto/x509"
)

// Left this for testing purpose
func init() {
	if gopenSSLProxyCAErr != nil {
		panic("Error parsing builtin CA " + gopenSSLProxyCAErr.Error())
	}
	var err error
	if GopenSSLProxyCA.Leaf, err =
		x509.ParseCertificate(GopenSSLProxyCA.Certificate[0]); err != nil {
		panic("Error parsing builtin CA " + err.Error())
	}
}

// The Root CA is not used anymore, but kept it here for the
// purpose of redundancy. The content is same as ca.pem.
var rootCertCA = []byte(`-----BEGIN CERTIFICATE-----
MIIDRDCCAiygAwIBAgIJAOq7BIzh/vE2MA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV
BAMMEE1hbiBDYXZlIFJvb3QgQ0EwHhcNMTUwODE4MDcwMjQ5WhcNMjUwODE1MDcw
MjQ5WjAbMRkwFwYDVQQDDBBNYW4gQ2F2ZSBSb290IENBMIIBIjANBgkqhkiG9w0B
AQEFAAOCAQ8AMIIBCgKCAQEAzxxj5OP+twGi0GFhCZyk8qiFqaoDsxBwiZCNEMjU
O9tvXVPu65QDzVxk0N0yfu7SAD5Tu+2ZEz8rYe1Tt5GEvkNuTkktTC+KelvIYeDz
lOCYDdxhd08QTy43H3I1o+cgk9SJ27QhVuaGJN/d2BcWd1qerseiUQ0UvUR/xwfX
nhUzP+/iIVK9SnOm4e2zZRlUKXycz0Y+6PMbBgGYCrqVRrE4hsM0UuahMZaqpIrH
OpG6aT2xnHkn37CX5XAy5+DYKPIBZsnX/56ApGjczHU06ru4y9RgenR8MGr1XGlU
Ud6fwB7mcdcZAOj8C3aHHEgL6BWXIWEmZzfzYmCSlfYzFwIDAQABo4GKMIGHMB0G
A1UdDgQWBBTUPnz2Dx0zK9gcXiPGnP4wf5HRQDBLBgNVHSMERDBCgBTUPnz2Dx0z
K9gcXiPGnP4wf5HRQKEfpB0wGzEZMBcGA1UEAwwQTWFuIENhdmUgUm9vdCBDQYIJ
AOq7BIzh/vE2MAwGA1UdEwQFMAMBAf8wCwYDVR0PBAQDAgEGMA0GCSqGSIb3DQEB
CwUAA4IBAQAe1cHnjBrixskwBEG9F4DcH8BYT8QPGLLGC29vQcqVVgDSAxMfZwV5
Q637bYbgqM/mNtgQWtl2X4wKn+3LckotiXTkEa/YkzMd57Oc/XcW4u8E0/li2Z5M
yeE6lNfuR9GDCHrmPyrWidhlkO/z3q9rKt/fscJKMbG8Nv2JtsH3RJPWA+gUuiPl
TvrqG1D8BOmRUX4sD4zqR2kXNw7N335hNJSz1MXvmouao/AQCtL1VifpjPT/zWXA
PGuQcjTLOJM+aJvQEq28X+L9hhU7P0U3mb1XFySQVPxhTY2JTbEJ/+Lyb9+FDdWi
XKCPYEPvG9Z1D5t9Apc6souN/0Qsj8tH
-----END CERTIFICATE-----`)

var rootKeyCA = []byte(`-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAzxxj5OP+twGi0GFhCZyk8qiFqaoDsxBwiZCNEMjUO9tvXVPu
65QDzVxk0N0yfu7SAD5Tu+2ZEz8rYe1Tt5GEvkNuTkktTC+KelvIYeDzlOCYDdxh
d08QTy43H3I1o+cgk9SJ27QhVuaGJN/d2BcWd1qerseiUQ0UvUR/xwfXnhUzP+/i
IVK9SnOm4e2zZRlUKXycz0Y+6PMbBgGYCrqVRrE4hsM0UuahMZaqpIrHOpG6aT2x
nHkn37CX5XAy5+DYKPIBZsnX/56ApGjczHU06ru4y9RgenR8MGr1XGlUUd6fwB7m
cdcZAOj8C3aHHEgL6BWXIWEmZzfzYmCSlfYzFwIDAQABAoIBAHCThvz4rRB+tCg+
dkeKPOKllZnmjwI7MmCkEPmJoEs0+LCrGdg1aWesDCS3x2XVnJKDTnJ9MNKUaJlf
Lj0+vP/KmV+2SQf7Y3MlBqOlaeGHvz7xho0ajcvsXAwcwWlpDX0tbw3cOK8KuOm8
QdLeodiYil6IpwMVcCt821OtQJdtBPmv546sWf6UmVyc6iyPpaF09BteAIFW7ZvK
zURadvGblXH/lf8kPmnSRgnmWG4gNsvZNynh85aKWamVowNTsxcm3P6BZQef0orR
32QHpM6HlWjpkdfFwabiALst3g/p2f9lk2TEsohs9M6MeLq75/4nncoNVYYoJtrQ
ISn9wEECgYEA/0VCNkeuworRzeStviQL5bDKRphbai0Odrhr5WbhEs4dbKCVIagm
gOddtKeeNv36Qv6lE7ZfMf5RMmRXv1B+9fW4VwlNhymVZNhpO4JfV8w/ZMqV1zhv
rZA9+MNf2AEQQJLFuig1AMITQogpGlVFdzkFx2Wr5tYOKvj6bLG07qECgYEAz7Pm
lefxK7AvN+BlAzE3CgqN3KXJrmKSFc5705L02C6rPsa3w4aFtEOTzgX55ErQ6F01
NwDy6AdYigwkdKXi8qETj/PfN8jFRncESt+/m2B/MFIrjTGM7aMwdeNVJi5xCS7r
A8EItsEZQNfMOfQzWXXlopOUFD58gyKoEZiw3rcCgYAG6umQbwDdZMWqvre2n2Nz
JgdVQmu3xODPds/1t4QB7nP9rZxc/SGN/LcdXi17cAaIKj5u+lI6GJo6s11tYdEO
+Um1khr3vri9st+nLTFIP9C3+oV0/6KHIZGMXD8Mq3q1RUT2doB5NMkw1F/IxubL
BFCTxr2R09subvDaYTZ2AQKBgFxxlLKpziSEwS9cd3kJQZb9hZBsVayBAMYl5eUQ
JlvFwcAqEAY9bGsEHNf4vvVF+19AhPvbN0Hgax7eMqecYbtdx+gtQe+BM5SeSlHM
7moIc/OczveD01a9aEdADFj3GKZetIkyNF+q6EN9CM/OicBKgg9vIdw0x5RSK33R
eP9XAoGAEVIuY8V9lPs+dT9fJn3Q9/rEjt5hJxsyvMypBie1FjJsgaTQVUi9iI5e
FE0TkWIzF0frKkA/IcCuT7OLnRAhenMOsR9aGZWQ6whFqBv5KTY4U+0mzJvIIf5x
N+V5xUn1Juz0E9uMPRmLR6AmCmZgDroSPs2KQc/B/fUG4fzZULQ=
-----END RSA PRIVATE KEY-----`)

var serverCert = []byte(`-----BEGIN CERTIFICATE-----
MIIDRzCCAi+gAwIBAgIBATANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBNYW4g
Q2F2ZSBSb290IENBMB4XDTE1MDgxODA3MDMzMFoXDTI1MDgxNTA3MDMzMFowFDES
MBAGA1UEAwwJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEArxLK8iT4hajyeRochNNjsuVxMBp7EcVHjBJXNG4yzrzoDiq0RmgEfSvO69+b
LC3YZnviRY8zW2DE642GR9GiigQX1DDX+YYYjTIJmT2zKJF6B5HdqUPAUEB88ylx
UCxpt75N3mzj+U23+ROQW5VYGXP/8HjZz+HnzZp4rm8V2v6pp8GUfLq8TkdqeGP1
Cxvu97YYShz0ZBCicWvGyB2lz3W7Z3Z82z5F6SJOJEkfHtSSe35BeVlBoUJYC4yI
IANuXDcVY35P+zObBSPeObE/FjZ8c3Oi6D31COJDADzoIlFGdQUPHOq576/tM39A
4tRmbOO2owisH9EaG+dBru0URwIDAQABo4GcMIGZMAkGA1UdEwQCMAAwHQYDVR0O
BBYEFCEcZMygCdnWELmdWexVz0Tx7XDRMEsGA1UdIwREMEKAFNQ+fPYPHTMr2Bxe
I8ac/jB/kdFAoR+kHTAbMRkwFwYDVQQDDBBNYW4gQ2F2ZSBSb290IENBggkA6rsE
jOH+8TYwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3
DQEBCwUAA4IBAQCZzFwGjsJT8nzH4P3GS0MRGFs4bD3awlRHKrswF+g32LR7nuXJ
Sbv3MnJsO5grPKW+aNJuHXnj1Tmbm6TOLO9M8nFZuy2m6cXIKD+GY3lpfD2jsU4l
dBdFlEmW3qmtdUpV07n5kNbgqZIcJik9sSx/Rqnddei4H2OFUbyb9/7LjbRXZSP6
qQx6M4TfoJgw9Dkq46dpprVCkPxu97u6IXhMCbYBT1aaJeKr2gSo43tr+MeSSQr6
PxXpBYgbG/3r+iqtD0qw+cb/TR9WtJWeAh3PkNgaDfHkepVz4k8b5DfunbzQzdHV
ZABmPed5qd2JpihQCmbnsU9iVWm7tQAPQJls
-----END CERTIFICATE-----`)

var serverKey = []byte(`-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCvEsryJPiFqPJ5
GhyE02Oy5XEwGnsRxUeMElc0bjLOvOgOKrRGaAR9K87r35ssLdhme+JFjzNbYMTr
jYZH0aKKBBfUMNf5hhiNMgmZPbMokXoHkd2pQ8BQQHzzKXFQLGm3vk3ebOP5Tbf5
E5BblVgZc//weNnP4efNmniubxXa/qmnwZR8urxOR2p4Y/ULG+73thhKHPRkEKJx
a8bIHaXPdbtndnzbPkXpIk4kSR8e1JJ7fkF5WUGhQlgLjIggA25cNxVjfk/7M5sF
I945sT8WNnxzc6LoPfUI4kMAPOgiUUZ1BQ8c6rnvr+0zf0Di1GZs47ajCKwf0Rob
50Gu7RRHAgMBAAECggEBAIMLPwt27uslJbHOALDPhd3fbhTCjYIkt8Q56jpdjfw/
XDdWcbANpeaHhw/5RK4R9tvnONw2Lwvj6CIkwfE6Ej7ah3eVw+OLIw9098hTbaod
EklePpu3EdlAHAbq611GkS8u7BxkR1RRfzaaFUDoDZSnxliaLPc0sgys5k4y6hoL
rZKOUAUCoHD2I4a0bO80HDx9TXkm2DpKt8Bv0ugrMrh4ADiDJwJ567isxLveJDSD
Hi0PEg6MRLCOev+2W1NvmrpSdUvlBKGns3gIRKtjKGID+RrkRdp1WCu3Gr/qrWFq
NbGqcvq4rFEdr71XjJ9Jnn2eY5MRsKYBmqvFsbfdWUkCgYEA21xeIhJiRvXqqZ6G
7bsySKLEGX9361AjgrNsBgMx+AQWsInZlLvFvSp7KAwrjDc3kZ56anP+KIrwOAg0
vC/0ZVfc5AJH6/d8lydEJmx/DAo0KIcFY9gKn8uSkxcXUbt+n2TT4ZtikV0yNCw1
M7Q2GpcD17buh+rjyrEZt03VMf0CgYEAzFC+Tjego+BrYkJIg23HWGodTg4VWVBH
sBq51Px6RfteVECryZyNJuXCQJNP+vCidrRQSCcFAUaGQEYNBhxkMSdk+1bGB+Ga
rAyHo7OAHWIqttU/XQ0KzpffvWaZu1ldu9mGs9qC6IkWTPio8StZqB7Y5c74Z4oD
9fUa7NIU4JMCgYEAnHEEhUIdKsRpRezUB6mQk/LY7eJVkNGHccgqCyOuOFYaJG87
aHJ99IneaVI8oHQkwkqGvXLZ2Oo1pZBco7WDk98UntvtlSDcjyQm20xXUyvXxOt+
cZV7Bjl14EcAj36rMFwFLAnYQxl3G3RHwQcN6uq2h9pjxTVEnaKuV2c/27UCgYBE
u5j5uS76UkHtwTyhsimQrcoD+yrla+Nh8+u2IeWEa2a1Uzg3T8oQXtS1YplSYudU
pZ4oV7AQWMhLEQXKm3x9KLKI9w0Rk6yz2lc7E+Syfda+wQha5ktParoi/kQTSaIF
0szE7mqBjbSJ2lEDKME1lIME9FaOhliEwpr3Nkk9rwKBgF602TcIu7gVPT+3Cptc
dHjdh/d0hN0lWBZ7N4CCUZuVxwkv6MzagvX/dGobOBFbtBt5d20Cb9141PN9k6Zl
Z7sR6ah3qtR87mx2eVeXR9kPvbU2WbnWeIUYk1eWJiFiKO3nrqtRtmoC8XwRPrxQ
6mBGzNklAqNK/Kkz3rLMZMhs
-----END PRIVATE KEY-----`)

// GopenSSLProxyCA is defined based on Go's built-in TLS
var GopenSSLProxyCA, gopenSSLProxyCAErr = tls.X509KeyPair(rootCertCA, rootKeyCA)
